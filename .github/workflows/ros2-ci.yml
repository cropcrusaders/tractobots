name: ROS 2 CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build-and-test:
    # ROS 2 Humble packages are only available for Ubuntu 22.04 (Jammy)
    # Use the jammy runner so apt can install ros-humble-desktop
    runs-on: ubuntu-22.04
    steps:

      # 1. Check out repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Install ROS 2 Humble using the official action
      - name: Set up ROS 2 Humble
        uses: ros-tooling/setup-ros@v0.4
        with:
          required-ros-distributions: humble

      # 3. Install OS-level build tools
      - name: Install OS dependencies
        run: |
          sudo apt update
          sudo apt install -y python3-pytest

      # Install tools required for running package tests and linters
      - name: Install test dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            ros-humble-ament-cmake \
            ros-humble-ament-cmake-test \
            ros-humble-ament-cmake-gtest \
            ros-humble-ament-cmake-pytest \
            ros-humble-ament-lint-auto \
            ros-humble-ament-lint-common
          source /opt/ros/humble/setup.bash
          echo "PYTHONPATH=$PYTHONPATH"

      # 4. Enable required apt repositories for dependencies
      - name: Enable universe repo (needed for libunwind-dev, glog, Nav2)
        run: |
          sudo add-apt-repository -y universe
          sudo apt-get update

      # Extra dependencies for Nav2 bringup which require universe packages
      - name: Install Nav2 dependencies
        run: |
          sudo apt-get install -y libunwind-dev libgoogle-glog-dev || true

      # 5. Install ROS 2 package dependencies
      - name: rosdep install
        run: |
          sudo rosdep init || true
          rosdep update
          rosdep install --from-paths src --ignore-src -y --rosdistro humble --skip-keys "agisostack_plus_plus"

      # 6. Build the workspace
      - name: Colcon build
        run: |
          source /opt/ros/humble/setup.bash
          colcon build --symlink-install --cmake-args -DENABLE_LINTING=OFF

      # 7. Package workspace into a Debian file
      - name: Build Debian package
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-bloom fakeroot dpkg-dev
          # python3-bloom exports a pinned ROS_DISTRO_INDEX_URL which breaks
          # subsequent rosdep calls. Unset it before running bloom.
          unset ROS_DISTRO_INDEX_URL
          bloom-generate rosdebian --ros-distro humble
          dpkg-buildpackage -aamd64 -us -uc

      - name: Collect Debian artifact
        run: |
          mkdir -p debs
          mv ../*.deb debs/

      - name: Upload Debian artifact
        uses: actions/upload-artifact@v4
        with:
          name: debs
          path: debs/*.deb

      # Restore missing ament-cmake-test helpers
      - name: Reinstall test helpers
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y \
            ros-humble-ament-cmake \
            ros-humble-ament-cmake-test \
            ros-humble-ament-lint-auto \
            ros-humble-ament-lint-common
          source /opt/ros/humble/setup.bash && env

      # 8. Run tests but allow failures
      - name: Colcon test
        continue-on-error: true
        run: |
          source /opt/ros/humble/setup.bash
          colcon test --event-handlers console_direct+ --cmake-args -DENABLE_LINTING=OFF
          colcon test-result --verbose || true

      # 9. Run linters and fail the job on lint issues
      - name: Run linters
        run: |
          source /opt/ros/humble/setup.bash
          ament_cpplint src
          ament_uncrustify src
          ament_flake8 src
